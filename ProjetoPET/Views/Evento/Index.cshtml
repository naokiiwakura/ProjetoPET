@model IEnumerable<ProjetoPET.Models.Eventos>

@{
    ViewData["Title"] = "Index";
}

<link href="~/css/pao_com_geleia.css" rel="stylesheet" />

<h2>Index</h2>

<p>
    <a class="btn btn-light" asp-action="Create">Adicionar</a>
</p>
@foreach (var item in Model)
{
    <div class="card mb-3">
        <div class=" card-body row">
            <div class="col-sm-6">
                <h5 class="card-title">@Html.DisplayFor(modelItem => item.Nome)</h5>
                <p class="card-text">Endereço: @Html.DisplayFor(modelItem => item.Rua), @Html.DisplayFor(modelItem => item.Numero)</p>
                <p class="card-text">Bairro: @Html.DisplayFor(modelItem => item.Bairro)</p>
                <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#ExemploModalCentralizado" onclick='pinar("@item.Rua,@item.Numero.ToString(),@item.Cidade")'>
                    Visualizar Localização
                </button>
                <div class="modal fade" id="ExemploModalCentralizado" tabindex="-1" role="dialog" aria-labelledby="TituloModalCentralizado" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="TituloModalCentralizado">Título do modal</h5>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Fechar">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body">
                                <div id="map_canvas" style="width: 95%; height: 432px"></div>

                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Fechar</button>

                            </div>
                        </div>
                    </div>
                </div>
                @*<p class="card-text"><small class="text-muted">@Html.DisplayFor(modelItem => item.Rua)</small>*@
            </div>
            <div class="col-sm-6">
                <h5 class="card-title">Data e Hora: @Html.DisplayFor(modelItem => item.DataHora)</h5>
                <p class="card-text">Descrição: @Html.DisplayFor(modelItem => item.Descricao)</p><a asp-action="Edit" asp-route-id="@item.Id">Editar</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Detalhar</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Excluir</a>

            </div>
        </div>
    </div>
    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAA8hwz5MoE8hs1FwRnJVMhcTQZZVGp9iw&libraries=places&callback=initAutocomplete" async defer></script>
    <script>
        let map;
        let service;
        let infowindow;

        function initAutocomplete() {
            map = new google.maps.Map(document.getElementById('map_canvas'), {
                center: { lat: -20.44278, lng: - 54.64639 },
                zoom: 15,
                mapTypeId: 'roadmap'
            });

            infowindow = new google.maps.InfoWindow();


        }

        function pinar(elemento) {
            var request = {
                query: elemento,
                fields: ['name', 'geometry'],
            };

            service = new google.maps.places.PlacesService(map);

            service.findPlaceFromQuery(request, function (results, status) {
                if (status === google.maps.places.PlacesServiceStatus.OK) {
                    for (var i = 0; i < results.length; i++) {
                        createMarker(results[i]);
                    }
                    map.setCenter(results[0].geometry.location);
                }
            });
        }




        function createMarker(place) {
            var marker = new google.maps.Marker({
                map: map,
                position: place.geometry.location,


            });

            google.maps.event.addListener(marker, 'click', function () {
                infowindow.setContent(place.name);
                infowindow.open(map, this);
            });
        }
    </script>

}


@*<table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Nome)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Descricao)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DataHora)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Cidade)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Estado)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Bairro)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CEP)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Rua)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Numero)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CreatedDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.UpdatedData)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Nome)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Descricao)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DataHora)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Cidade)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Estado)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Bairro)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CEP)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Rua)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Numero)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CreatedDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.UpdatedData)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>*@
