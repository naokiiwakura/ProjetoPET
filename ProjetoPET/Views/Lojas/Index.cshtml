@model IEnumerable<Lojas>

@{
    ViewData["Title"] = "Index";

}
<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.7.0/css/all.css" integrity="sha384-lZN37f5QGtY3VHgisS14W3ExzMWZxybE1SJSEsQp9S+oqd12jhcu+A56Ebc1zFSJ" crossorigin="anonymous">
<link href="~/css/pao_com_geleia.css" rel="stylesheet" />




<h2>Index</h2>

<p>
    <a asp-action="Create">Create New</a>
</p>

<div class="container">
    @foreach (var item in Model)
    {
        var photoPath = "~/images/LojasPhotos/" + (item.ImagePath ?? "imagem.png");
        <style>
        </style>

        <div class="col-md-6 form-group " >
            
            <div class="card mb-3" style="max-width: 540px;">
                <div class="row no-gutters">
                    <div class="col-md-4" style="margin:auto">
                        <img src="@photoPath" class="imagem_loja"  asp-append-version="true" />
                    </div>
                    <div class="col-md-8">
                        <div class="card-body">
                            <h5 class="card-title"> @Html.DisplayFor(modelItem => item.NomeLoja)</h5>
                            <p class="card-text">
                                <i class="fas fa-map-marker-alt"></i>
                                <a id="endereco" onclick="pinar(this)">
                                    @Html.DisplayFor(modelItem => item.Endereco),@Html.DisplayFor(modelItem => item.Numero),@Html.DisplayFor(modelItem => item.Cidade)
                                </a>
                            </p>
                            <p class="card-text"><i class="fas fa-phone"></i>@Html.DisplayFor(modelItem => item.Telefone)</p>
                            <p>
                                <i class="fas fa-envelope"></i>  @Html.DisplayFor(modelItem => item.Email)
                            </p>
                        </div>
                    </div>
                </div>
            </div>
            
        </div>
    }
</div>

<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAA8hwz5MoE8hs1FwRnJVMhcTQZZVGp9iw&libraries=places&callback=initAutocomplete" async defer></script>

<div id="map_canvas" style="width: 95%; height: 432px"></div>



<script>

    let map;
    let service;
    let infowindow;

    function initAutocomplete() {
        map = new google.maps.Map(document.getElementById('map_canvas'), {
            center: { lat: -20.44278, lng: - 54.64639 },
            zoom: 20,
            mapTypeId: 'roadmap'
        });

        infowindow = new google.maps.InfoWindow();

     
    }

    function pinar(elemento) {
        console.log(elemento);

        var request = {
            query: elemento.innerText,
            fields: ['name', 'geometry'],
        };

        service = new google.maps.places.PlacesService(map);

        service.findPlaceFromQuery(request, function (results, status) {
            if (status === google.maps.places.PlacesServiceStatus.OK) {
                for (var i = 0; i < results.length; i++) {
                    createMarker(results[i]);
                }
                map.setCenter(results[0].geometry.location);
            }
        });
    }
  
     


    function createMarker(place) {
        var marker = new google.maps.Marker({
            map: map,
            position: place.geometry.location,
            

        });

        google.maps.event.addListener(marker, 'click', function () {
            infowindow.setContent(place.name);
            infowindow.open(map, this);
        });
    }

</script>





